@model TopProSystem.Areas.MasterSetting.Models.MA009
@using StaticResources
@using StaticResources.View.ExchangeRate



@{

    ViewBag.Title = Resource.ChangeTitle;
    Layout = "~/Areas/MasterSetting/Views/Shared/_LayoutMasterSeting.cshtml";
    ViewBag.headerName = ViewBag.Title;
}

<style>
    input[type = text], input[type = "password"], select {
        width: 300px;
    }

    .divTableRow .divTableCell:first-child {
        width: 10%;
    }

    .divTableRow .divTableCell:last-child {
        width: 90%;
    }
</style>
<div class="container-fluid">
    <div class="data-content">
        <form action="@Url.Action("UpdateExchangeRate","Master")" method="post" id="ExchangeRate-Master-Form">
            <div class="divTable" style="border: 1px solid #000">
                <div class="divTableBody">
                    <div class="divTableRow ">
                        <div class="divTableCell "><span class="title-normal">@Resource.MJCRRCD</span></div>
                        <div class="divTableCell ">
                            @Html.Hidden("MJCRRCD", Model.MJCRRCD.Trim())
                            <input type="text" value="@TopProSystem.Areas.MasterSetting.Controllers.MasterController.GetSRNameBySRCode("018",Model.MJCRRCD)" tabindex="1" readonly />
                        </div>
                    </div>
                    <div class="divTableRow">
                        <div class="divTableCell "><span class="title-normal">@Resource.MJEXRTT</span></div>
                        <div class="divTableCell ">
                            @Html.DropDownListFor(x => x.MJEXRTT, Model.ExchangerateTypes, RLayout.SelectAction, new { @tabindex = "2" })
                            <input type="text" name="MJEXRTT_dl" id="MJEXRTT_dl" value="" readonly="">
                        </div>
                    </div>
                    <div class="divTableRow">
                        <div class="divTableCell "><span class="title-normal">@Resource.MJEXRDT</span></div>
                        <div class="divTableCell "><input type="text" name="MJEXRTD" id="MJEXRTD" value="@Model.MJEXRTD" tabindex="3" /></div>
                    </div>
                    <div class="divTableRow">
                        <div class="divTableCell "><span class="title-normal">@Resource.MJEXRT</span></div>
                        <div class="divTableCell "><input type="text" name="MJEXRT" id="MJEXRT" value="@Model.MJEXRT" tabindex="4" /></div>
                    </div>
                    <div class="divTableRow">
                        <div class="divTableCell "><span class="title-normal">@Resource.MJTXEXR</span></div>
                        <div class="divTableCell "><input type="text" name="MJTXEXR" id="MJTXEXR" value="@Model.MJTXEXR" tabindex="5" /></div>
                    </div>
                </div>
            </div>
            <div class="mt-3 float-right">
                <button type="submit" class="btn-primary">@Button.BtnConfirm</button>
                <button type="button" class="cancel" onclick="javascript:window.location.href='/MasterSetting/Master/ExchangeRateMaster'">@Button.BtnCancel</button>

            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
 


    $('#ExchangeRate-Master-Form').validate({
        rules: {
            MJEXRTT: 'required',
            MJEXRTD: {
                required: true,
                maxlength: 6,
                minlength: 5,
                number: true,
                validDate: true
            },
            MJEXRT: {
                required: true,
                maxlength: 12,
                number: true,
            },
            MJTXEXR: {
                maxlength: 12,
                number: true,
            }
        },
        messages: {
             MJEXRT: {
                required: '@Html.Raw(RLayout.Required)',
                maxlength: '@Html.Raw(string.Format(RLayout.Maxlength,"12"))',
                number:'@Html.Raw(RLayout.IsNumber)',
            },
            required: '@Html.Raw(RLayout.Required)',
            MJTXEXR: {
                  maxlength: '@Html.Raw(string.Format(RLayout.Maxlength,"12"))',
               number:'@Html.Raw(RLayout.IsNumber)',
            },
            MJEXRTD: {
              required: '@Html.Raw(RLayout.Required)',
                maxlength: '@Html.Raw(string.Format(RLayout.Maxlength,"6"))',
                minlength: '@Html.Raw(string.Format(RLayout.Maxlength,"5"))',
                 number:'@Html.Raw(RLayout.IsNumber)',
            }
        },
        errorElement: 'label',
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        },
    })


    $.validator.addMethod("validDate", function (value) {
        return valiFormatMMYYYY(value);
    }, "@Html.Raw(Resource.ValidDate)");
    $(document).ready(function () {
        $('#MJEXRTT').change();

    })
    $('#MJEXRTT').change(function () {
        if ($(this).val() === '') {
            $('#AACMDCD_dl').val('');
        } else {
            $.getJSON('/MasterSetting/Master/GetJsonBySRCode',
                {
                    codes: '018' + '|' + $(this).val().trim()
                }).done(function (rs) {
                    $('#MJEXRTT_dl').val(rs.MNSRNM);
                }).fail(function (rs) {
                    console.error(rs.responseText);
                })
        }
    })
</script>